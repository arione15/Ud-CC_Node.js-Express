<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Movies Express</title>
    <link rel="stylesheet" href="../public/style.css" />
    <script src="https://unpkg.com/axios/dist/axios.min.js "></script>
    <link rel="shortcut icon" href="#">
</head>

<body>
    <%- include('./partials/header'); %>

    <div class="central">
        <h1>
            <%= title %>
        </h1>
        <br>
        <div id="login">
            <form>
                <legend>Veuillez saisir vos identifiants</legend>
                <label for="email">email</label>
                <input type="text" name="email" id="email">
                <label for="password">mot de passe</label>
                <input type="password" name="password" id="password">
                <button type="submit">connexion</button>
            </form>
        </div>
        <br>
        <div id="profile" style="display:none">
            <button id="disconnectBtn">Déconnexion</button>
            <button id="display-payload">Afficher le payload</button>
            <div id="decoded-payload"></div>
            <div>
                <a href="#" id="member-only">Espace membre</a>
                <div id="member-data"></div>
            </div>
        </div>
    </div>

    <footer>
        <%- include('./partials/footer'); %>
    </footer>
    <script>
        var form = document.querySelector('form');
        form.addEventListener("submit", loginUser);

        var loginArea = document.querySelector('#login');
        var profileArea = document.querySelector('#profile');

        var displayPayloadBtn = document.querySelector('#display-payload');
        displayPayloadBtn.addEventListener('click', displayPayload);

        var disconnectBtn = document.querySelector('#disconnectBtn');
        disconnectBtn.addEventListener('click', disconnect);
        var connectionLinkArea = document.querySelector('#connectionLink');
        handleFormDisplay();

        function loginUser(event) {
            loginUserWithXHR(event);
        }

        function loginUserWithXHR(event) {
            event.preventDefault();
            console.log('loginUserWithXHR');

            // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send
            var xhr = new XMLHttpRequest();
            xhr.open("POST", '/login', true);

            //Send the proper header information along with the request
            xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

            xhr.onreadystatechange = function () { //Call a function when the state changes.
                if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
                    //console.log('xhr : ', xhr);
                    // add token to localStorage
                    var token = xhr.response;
                    localStorage.setItem('token', token);
                    switchToLoggedInMode(); //fonction qui cache et montre des éléments
                    form.reset();
                }
            }
            var email = document.getElementById('email').value;
            var password = document.getElementById('password').value;
            var payLoad = "email=" + email + "&" + "password=" + password;
            xhr.send(payLoad);
        };

        function handleFormDisplay() { 
            var tokenFromStorage = localStorage.getItem('token');            
            console.log('handleFormDisplay tokenFromStorage', tokenFromStorage);   
            if(tokenFromStorage) {
                switchToLoggedinMode();                     
            } else {
                switchToLoggedOutMode();
            }
        }

        function switchToLoggedInMode() {
            loginArea.style.display = 'none';
            profileArea.style.display = 'block';
            connectionLinkArea.innerHTML='<a href="/login">Déconnexion</a>';
        };
        
        function switchToLoggedOutMode() {
            loginArea.style.display = 'block';
            profileArea.style.display = 'none';
            connectionLinkArea.innerHTML='<a href="/login">Connexion</a>';
        };

        function displayPayload() {
            var payload = parseJwt();
            console.log(payload);
            var decodedPayloadDiv = document.querySelector('#decoded-payload');
            decodedPayloadDiv.innerHTML = '<pre>' + JSON.stringify(payload) + '</pre>';
        }

        function parseJwt () { 
            tokenFromStorage = localStorage.getItem('token');            
            console.log('parseJwt tokenFromStorage', tokenFromStorage);
            if(tokenFromStorage) {
                var base64Payload = tokenFromStorage.split('.')[1];                
                return JSON.parse(window.atob(base64Payload));
            } else {
                return 'no token to parse';
            }          
        };

        function disconnect() {
            switchToLoggedOutMode();
            localStorage.removeItem('token');
        };

        function makeRequestWithToken(evt) {
            evt.preventDefault();
            console.log('makeRequestWithToken');
            var page = this.id;
            tokenFromStorage = localStorage.getItem('token');   
            var config = {};
            if(tokenFromStorage) {
                config.headers =  {'Authorization': "Bearer " + JSON.parse(tokenFromStorage)}
            }

            var bodyParameters = {};

            axios.get( 
                'http://localhost:3000/' + page,
                config
            ).then((res) => {
                console.log('success');
                console.log(res);  
                const memberDataDiv = document.querySelector('#member-data');
                memberDataDiv.innerHTML = '<pre>Bienvenue ' + res.data.user + '<br>'
                                            + '. Votre rôle : ' + res.data.role  + '<br>'
                                            + '. Vous pouvez tout casser sur ' + res.data.iss
                                            + '</pre>';
            })
            .catch(err => {
                console.error('makeRequestWithToken err', err);
            });
        }
    </script>
</body>

</html>